{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0cff9de0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "file = ROOT.TFile(\"muons_v2.root\")\n",
    "tree = file.Get(\"t3333\")\n",
    "transverse_mass = []\n",
    "\n",
    "for i in range(tree.GetEntries()):\n",
    "    tree.GetEntry(i)\n",
    "    if (tree.NMUO == 1 and tree.NELE == 0):\n",
    "        px_lep = tree.PXMUO[0]/1000  \n",
    "        py_lep = tree.PYMUO[0]/1000  \n",
    "    elif (tree.NELE == 1 and tree.NMUO == 0):\n",
    "        px_lep = tree.PXELE[0]/1000  \n",
    "        py_lep = tree.PYELE[0]/1000  \n",
    "    else:\n",
    "        continue \n",
    "        \n",
    "    px_miss = tree.PXMISS/1000  \n",
    "    py_miss = tree.PYMISS/1000  \n",
    "    pt_lep = np.sqrt(px_lep**2 + py_lep**2)\n",
    "    pt_miss = np.sqrt(px_miss**2 + py_miss**2)\n",
    "    phi_lep = np.arctan2(py_lep, px_lep)\n",
    "    phi_miss = np.arctan2(py_miss, px_miss)\n",
    "    delta_phi = phi_lep - phi_miss\n",
    "    delta_phi = np.arctan2(np.sin(delta_phi), np.cos(delta_phi))\n",
    "\n",
    "    mt = np.sqrt(2 * pt_lep * pt_miss * (1 - np.cos(delta_phi)))\n",
    "    transverse_mass.append(mt)\n",
    "\n",
    "transverse_mass = np.array(transverse_mass)\n",
    "plt.figure(figsize=(10,6))\n",
    "plt.hist(transverse_mass, bins=120, range=(0,150), alpha=0.8, color='green')\n",
    "plt.title(\"W boson candidate - Transverse Mass\")\n",
    "plt.xlabel(\"Transverse Mass $M_T$ (GeV)\")\n",
    "plt.ylabel(\"Counts\")\n",
    "plt.grid(True)\n",
    "plt.axvline(80.4, color='red', linestyle='dashed', linewidth=1.5, label='W mass (80.4 GeV)')\n",
    "plt.legend()\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bb492ec",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
