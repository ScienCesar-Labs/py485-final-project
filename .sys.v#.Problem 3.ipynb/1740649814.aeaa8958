{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d9f3d502",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Open ROOT file\n",
    "file = ROOT.TFile(\"muons_v2.root\")\n",
    "tree = file.Get(\"t3333\")\n",
    "\n",
    "# Containers for transverse mass\n",
    "transverse_mass = []\n",
    "\n",
    "# Loop over events\n",
    "for i in range(tree.GetEntries()):\n",
    "    tree.GetEntry(i)\n",
    "\n",
    "    # Select events with exactly 1 charged lepton (muon or electron)\n",
    "    if (tree.NMUO == 1 and tree.NELE == 0):\n",
    "        # Muon data\n",
    "        px_lep = tree.PXMUO[0]/1000  # GeV\n",
    "        py_lep = tree.PYMUO[0]/1000  # GeV\n",
    "    elif (tree.NELE == 1 and tree.NMUO == 0):\n",
    "        # Electron data\n",
    "        px_lep = tree.PXELE[0]/1000  # GeV\n",
    "        py_lep = tree.PYELE[0]/1000  # GeV\n",
    "    else:\n",
    "        continue  # Skip if not exactly 1 charged lepton\n",
    "\n",
    "    # Missing transverse energy (assume neutrino)\n",
    "    px_miss = tree.PXMISS/1000  # GeV\n",
    "    py_miss = tree.PYMISS/1000  # GeV\n",
    "\n",
    "    # Calculate transverse momentum magnitudes\n",
    "    pt_lep = np.sqrt(px_lep**2 + py_lep**2)\n",
    "    pt_miss = np.sqrt(px_miss**2 + py_miss**2)\n",
    "\n",
    "    # Calculate delta_phi (angle difference)\n",
    "    phi_lep = np.arctan2(py_lep, px_lep)\n",
    "    phi_miss = np.arctan2(py_miss, px_miss)\n",
    "    delta_phi = phi_lep - phi_miss\n",
    "\n",
    "    # Correct delta_phi to be between -pi and pi\n",
    "    delta_phi = np.arctan2(np.sin(delta_phi), np.cos(delta_phi))\n",
    "\n",
    "    # Transverse mass formula\n",
    "    mt = np.sqrt(2 * pt_lep * pt_miss * (1 - np.cos(delta_phi)))\n",
    "\n",
    "    transverse_mass.append(mt)\n",
    "\n",
    "# Convert to numpy array for easy handling\n",
    "transverse_mass = np.array(transverse_mass)\n",
    "\n",
    "# Plotting transverse mass histogram\n",
    "plt.figure(figsize=(10,6))\n",
    "plt.hist(transverse_mass, bins=100, range=(0,150), alpha=0.8, color='green')\n",
    "plt.title(\"W boson candidate - Transverse Mass\")\n",
    "plt.xlabel(\"Transverse Mass $M_T$ (GeV)\")\n",
    "plt.ylabel(\"Counts\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.hist(transverse_mass, bins=120, range=(0,150), alpha=0.8, color='green')\n",
    "\n",
    "# Add a reference line for W boson mass (~80 GeV)\n",
    "plt.axvline(80.4, color='red', linestyle='dashed', linewidth=1.5, label='W mass (80.4 GeV)')\n",
    "plt.legend()\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "059bbd72",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
